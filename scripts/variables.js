const ALL_LAYERS_VERBOSE = false

const APPLICATION_VERBOSE = ALL_LAYERS_VERBOSE || false
const BLOCKCHAIN_VERBOSE = ALL_LAYERS_VERBOSE || false
const PHYSICAL_VERBOSE = ALL_LAYERS_VERBOSE || false
const CHANNEL_VERBOSE = ALL_LAYERS_VERBOSE || false

const BLOCK_VERBOSE = false
const TRANSACTION_VERBOSE = false


let MESSAGE_LIFE_AFTER_ARRIVAL = 2000 //In milliseconds
let MINIMUM_BITS_IN_TRANSACTION = 2000
let MINIMUM_TRANSACTIONS_IN_BLOCK = 100
let MESSAGE_BUFFER_SIZE = 2048

let DASHBOARD_UPDATE_PERIOD = 1000 //In milliseconds


// Variable variables (i know it's a bad name)

let PHYSICAL_DISTANCE_MULTIPLIER = 1
let TIME_MULTIPLIER = 1
let MESSAGE_DELAY_MULTIPLIER = 1

//Messages will be generated in each node with a period MESSAGE_DELAY_MINIMUM + MESSAGE_DELAY_VARIABILITY * Math.random()
let MESSAGE_DELAY_MINIMUM = 500
let MESSAGE_DELAY_VARIABILITY = 0

let BROADCAST_PULL_PERIOD = 500 //In milliseconds

let MAXIMUM_TRANSACTION_FEE = 10
let STARTING_BALANCE = 5000
let LOW_BALANCE_THRESHOLD = 100 //If a node has less than this amount of currency, it will not generate messages
let VALID_BLOCK_PROPOSAL_REWARD = 10 //Extra currency for proposer if it successfully proposes a block
let INVALID_BLOCK_SLASH_RATIO = 0.5 //If a node proposes an invalid block, its balance is multiplied by this factor
let REPEATED_PROPOSER_PENALTY = 0.5 //If a proposer has recently proposed a block, its balance is multiplied by this factor, making it less likely to be chosen again
let BACKUP_PROPOSER_NUMBER = 2 //Number of backup proposers in case the first one fails. Proposer buffers will be 1 default proposer plus BACKUP_PROPOSER_NUMBER backup proposers


let MALICIOUS_NODE_INVALID_TRANSACTION_RATE = 0.2 //Rate of invalid transactions generated by malicious nodes
